"""
Django settings for blogapp project.

Generated by 'django-admin startproject' using Django 4.2.7.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path
from os import getenv

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure--6kvlqn&ml&iofp^gn%tz_-e7h!(u)$w@xqbi%mdo*o=%jkap4'
# SECRET_KEY = getenv('SECRET_KEY')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = getenv('IS_DEVELOPMENT', 'True') == 'True'
# DEBUG = getenv('IS_DEVELOPMENT', True)

ALLOWED_HOSTS = ['localhost', '127.0.0.1', getenv('RENDER_EXTERNAL_HOSTNAME'),
                'www.blogcode.azurewebsites.net', 'blogcode.azurewebsites.net']

# ALLOWED_HOST = [
#     getenv('APP_HOST')
# ]
INTERNAL_IPS = (
    '127.0.0.1',
    'localhost:8000'
)

CSRF_TRUSTED_ORIGINS = ['https://*.azurewebsites.net/']
CSRF_COOKIE_SECURE = True
CSRF_COOKIE_SAMESITE = 'Lax'

LOGIN_URL = '/login/'

LOGIN_REDIRECT_URL = 'https://blogcode.azurewebsites.net/'

SITE_ID = 1

# Application definition

INSTALLED_APPS = [
    'blog',
    'accountuser',
    'community',
    'paper',
    'payment',
    'iyzipay',
    'ckeditor',
    'ckeditor_uploader',
    'allauth',
    'allauth.account',
    'allauth.socialaccount',
    'allauth.socialaccount.providers.google',
    'django.contrib.humanize',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
]

AUTHENTICATION_BACKENDS = [
    # Diğer backend'ler...
    'allauth.account.auth_backends.AuthenticationBackend',
]

# Allauth ayarları
ACCOUNT_EMAIL_VERIFICATION = 'none'  # E-posta doğrulama işlemini devre dışı bırakmak için
SOCIALACCOUNT_QUERY_EMAIL = True
SOCIALACCOUNT_AUTO_SIGNUP = True

# Google API anahtarı ve Secret'ı
SOCIALACCOUNT_PROVIDERS = {
    'google': {
        'APP': {
            'client_id': '1023496031221-mgm22h682mmt6oqvdf565jst5mvh5475.apps.googleusercontent.com',
            'secret': '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',
            'key': 'AIzaSyDeD-Qrkdm2nYXkHQ1l5W1TsMG_Ou2ak_Q'
        }
    }
}

# SOCIALACCOUNT_PROVIDERS = {
#     'google': {
#         'SCOPE': [
#             'profile',
#             'email',
#         ],
#         'AUTH_PARAMS': {
#             'access_type': 'online',
#         }
#     }
# }

# IYZIPAY_SETTINGS = {
#     'api_key': 'sandbox-VBdrbXQE60F4FyExrEPL3HxxYEKaMW95',
#     'secret_key': 'sandbox-nlKE9Ed7Ace0uzXmtjIv9NOwRzDrXTte',
#     'base_url': 'sandbox-api.iyzipay.com'
# }


MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'allauth.account.middleware.AccountMiddleware',
]

ROOT_URLCONF = 'blogapp.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            BASE_DIR / "templates"
        ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'blogapp.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'tr-tr'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = 'static/'
STATICFILES_DIRS = [
    BASE_DIR / 'static'
]
STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'
STATIC_ROOT = BASE_DIR / 'staticfiles'

MEDIA_ROOT = BASE_DIR / 'uploads'
MEDIA_URL = '/images/'
# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

CKEDITOR_UPLOAD_PATH = 'uploads/'
CKEDITOR_IMAGE_BACKEND = 'pillow'

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
